{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "yevnet-dwdemo-adf"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/deletePL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DeleteDimSupplier",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DimSupplier",
								"type": "DatasetReference"
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "datalakeLS",
									"type": "LinkedServiceReference"
								},
								"path": "northwind/system"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "DeleteDimCategory",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DimCategory",
								"type": "DatasetReference"
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "datalakeLS",
									"type": "LinkedServiceReference"
								},
								"path": "northwind/system"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "DeleteDimEmployee",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DimEmployee",
								"type": "DatasetReference"
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "datalakeLS",
									"type": "LinkedServiceReference"
								},
								"path": "northwind/system"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "DeleteFactEmployee",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "FactEmployee",
								"type": "DatasetReference"
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "datalakeLS",
									"type": "LinkedServiceReference"
								},
								"path": "northwind/system"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "DeleteFactEmployeeMonthly",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "FactEmployeeMonthly",
								"type": "DatasetReference"
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "datalakeLS",
									"type": "LinkedServiceReference"
								},
								"path": "northwind/system"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "DeleteFactProduct",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "FactProduct",
								"type": "DatasetReference"
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "datalakeLS",
									"type": "LinkedServiceReference"
								},
								"path": "northwind/system"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "DeleteFactSupervisor",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "FactSupervisor",
								"type": "DatasetReference"
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "datalakeLS",
									"type": "LinkedServiceReference"
								},
								"path": "northwind/system"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							}
						}
					}
				],
				"folder": {
					"name": "dwhPL"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DimSupplier')]",
				"[concat(variables('factoryId'), '/datasets/DimCategory')]",
				"[concat(variables('factoryId'), '/datasets/DimEmployee')]",
				"[concat(variables('factoryId'), '/datasets/FactEmployee')]",
				"[concat(variables('factoryId'), '/datasets/FactEmployeeMonthly')]",
				"[concat(variables('factoryId'), '/datasets/FactProduct')]",
				"[concat(variables('factoryId'), '/datasets/FactSupervisor')]",
				"[concat(variables('factoryId'), '/linkedServices/datalakeLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dwhPL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "aggregateData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "aggregateData",
								"type": "DataFlowReference",
								"parameters": {
									"month_p": {
										"value": "@int(substring(pipeline().parameters.date,5,2))",
										"type": "Expression"
									},
									"year_p": {
										"value": "@int(substring(pipeline().parameters.date,0,4))",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"categorySource": {
										"year_p": 1996,
										"month_p": 7,
										"day_p": 16
									},
									"employeesSource": {
										"year_p": 1996,
										"month_p": 7,
										"day_p": 16
									},
									"orderDetailsSource": {
										"year_p": 1996,
										"month_p": 7,
										"day_p": 16
									},
									"terretoriesSource": {
										"year_p": 1996,
										"month_p": 7,
										"day_p": 16
									},
									"employeeTerretoriesSource": {
										"year_p": 1996,
										"month_p": 7,
										"day_p": 16
									},
									"supplierSource": {
										"year_p": 1996,
										"month_p": 7,
										"day_p": 16
									},
									"productsSource": {
										"year_p": 1996,
										"month_p": 7,
										"day_p": 16
									}
								}
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "CopyToSynapse",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "aggregateData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "toSynapsePL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "DeleteAggregate",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyToSynapse",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "deletePL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					}
				],
				"parameters": {
					"date": {
						"type": "string",
						"defaultValue": "1997-12-31"
					}
				},
				"folder": {
					"name": "dwhPL"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/aggregateData')]",
				"[concat(variables('factoryId'), '/pipelines/toSynapsePL')]",
				"[concat(variables('factoryId'), '/pipelines/deletePL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/northwindDumps')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CategoriesCopy",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "categoriesTable",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "categoriesParquet",
								"type": "DatasetReference",
								"parameters": {
									"year_p": {
										"value": "@pipeline().parameters.year",
										"type": "Expression"
									},
									"month_p": {
										"value": "@pipeline().parameters.month",
										"type": "Expression"
									},
									"day_p": {
										"value": "@pipeline().parameters.day",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "CustomersCopy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CategoriesCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "customersTable",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "customersParquet",
								"type": "DatasetReference",
								"parameters": {
									"year_p": {
										"value": "@pipeline().parameters.year",
										"type": "Expression"
									},
									"month_p": {
										"value": "@pipeline().parameters.month",
										"type": "Expression"
									},
									"day_p": {
										"value": "@pipeline().parameters.day",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "EmployeesCopy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CustomersCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "employeesTable",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "employeesParquet",
								"type": "DatasetReference",
								"parameters": {
									"year_p": {
										"value": "@pipeline().parameters.year",
										"type": "Expression"
									},
									"month_p": {
										"value": "@pipeline().parameters.month",
										"type": "Expression"
									},
									"day_p": {
										"value": "@pipeline().parameters.day",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "EmployeeTerritoriesCopy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "EmployeesCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "employeeTerretoriesTable",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "employeeTerritoriesParquet",
								"type": "DatasetReference",
								"parameters": {
									"year_p": {
										"value": "@pipeline().parameters.year",
										"type": "Expression"
									},
									"month_p": {
										"value": "@pipeline().parameters.month",
										"type": "Expression"
									},
									"day_p": {
										"value": "@pipeline().parameters.day",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "OrderDetailsCopy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "EmployeeTerritoriesCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "orderDetailsTable",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "orderDetailsParquet",
								"type": "DatasetReference",
								"parameters": {
									"year_p": {
										"value": "@pipeline().parameters.year",
										"type": "Expression"
									},
									"month_p": {
										"value": "@pipeline().parameters.month",
										"type": "Expression"
									},
									"day_p": {
										"value": "@pipeline().parameters.day",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "ProductsCopy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "OrderDetailsCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "productsTable",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "productsParquet",
								"type": "DatasetReference",
								"parameters": {
									"year_p": {
										"value": "@pipeline().parameters.year",
										"type": "Expression"
									},
									"month_p": {
										"value": "@pipeline().parameters.month",
										"type": "Expression"
									},
									"day_p": {
										"value": "@pipeline().parameters.day",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "SchippersCopy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "RegionCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "shippersTable",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "shippersParquet",
								"type": "DatasetReference",
								"parameters": {
									"year_p": {
										"value": "@pipeline().parameters.year",
										"type": "Expression"
									},
									"month_p": {
										"value": "@pipeline().parameters.month",
										"type": "Expression"
									},
									"day_p": {
										"value": "@pipeline().parameters.day",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "RegionCopy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ProductsCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "regionTable",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "regionParquet",
								"type": "DatasetReference",
								"parameters": {
									"year_p": {
										"value": "@pipeline().parameters.year",
										"type": "Expression"
									},
									"month_p": {
										"value": "@pipeline().parameters.month",
										"type": "Expression"
									},
									"day_p": {
										"value": "@pipeline().parameters.day",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "SuppliersCopy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SchippersCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "suppliersTable",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "suppliersParquet",
								"type": "DatasetReference",
								"parameters": {
									"year_p": {
										"value": "@pipeline().parameters.year",
										"type": "Expression"
									},
									"month_p": {
										"value": "@pipeline().parameters.month",
										"type": "Expression"
									},
									"day_p": {
										"value": "@pipeline().parameters.day",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "TerritoriesCopy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SuppliersCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "territoriesTable",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "territoriesParquet",
								"type": "DatasetReference",
								"parameters": {
									"year_p": {
										"value": "@pipeline().parameters.year",
										"type": "Expression"
									},
									"month_p": {
										"value": "@pipeline().parameters.month",
										"type": "Expression"
									},
									"day_p": {
										"value": "@pipeline().parameters.day",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"year": {
						"type": "int",
						"defaultValue": 1996
					},
					"month": {
						"type": "int",
						"defaultValue": 7
					},
					"day": {
						"type": "int",
						"defaultValue": 16
					}
				},
				"folder": {
					"name": "PreparePL"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/categoriesTable')]",
				"[concat(variables('factoryId'), '/datasets/categoriesParquet')]",
				"[concat(variables('factoryId'), '/datasets/customersTable')]",
				"[concat(variables('factoryId'), '/datasets/customersParquet')]",
				"[concat(variables('factoryId'), '/datasets/employeesTable')]",
				"[concat(variables('factoryId'), '/datasets/employeesParquet')]",
				"[concat(variables('factoryId'), '/datasets/employeeTerretoriesTable')]",
				"[concat(variables('factoryId'), '/datasets/employeeTerritoriesParquet')]",
				"[concat(variables('factoryId'), '/datasets/orderDetailsTable')]",
				"[concat(variables('factoryId'), '/datasets/orderDetailsParquet')]",
				"[concat(variables('factoryId'), '/datasets/productsTable')]",
				"[concat(variables('factoryId'), '/datasets/productsParquet')]",
				"[concat(variables('factoryId'), '/datasets/shippersTable')]",
				"[concat(variables('factoryId'), '/datasets/shippersParquet')]",
				"[concat(variables('factoryId'), '/datasets/regionTable')]",
				"[concat(variables('factoryId'), '/datasets/regionParquet')]",
				"[concat(variables('factoryId'), '/datasets/suppliersTable')]",
				"[concat(variables('factoryId'), '/datasets/suppliersParquet')]",
				"[concat(variables('factoryId'), '/datasets/territoriesTable')]",
				"[concat(variables('factoryId'), '/datasets/territoriesParquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/northwindPreparePL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "prepareOrders",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "prepareOrders",
								"type": "DataFlowReference",
								"parameters": {
									"year_p": "1996",
									"month_p": "7",
									"day_p": "15"
								}
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "PreparePL"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/prepareOrders')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/toSynapsePL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDimSupplier",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "output/DimSupplier",
									"wildcardFileName": "*.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE northwind.DimSupplier;",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DimSupplier",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "suppliersSynapse",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "CopyDimCategory",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "output/DimCategory",
									"wildcardFileName": "*.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE northwind.DimCategory;",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DimCategory",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "categorySynapse",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "CopyDimEmployee",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "output/DimEmployee",
									"wildcardFileName": "*.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE northwind.DimEmployee;",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DimEmployee",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "employeeSynapse",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "CopyFactProduct",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "output/FactProduct",
									"wildcardFileName": "*.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE northwind.FactProduct;",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FactProduct",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "productFactSynapse",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "CopyFactEmployee",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "output/FactEmployee",
									"wildcardFileName": "*.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE northwind.FactEmployee;",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FactEmployee",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "employeeFactSynapse",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "CopyFactSupervisor",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "output/FactSupervisor",
									"wildcardFileName": "*.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE northwind.FactSupervisor;",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FactSupervisor",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "supervisorFactSynapse",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "CopyFactEmployeeMonthly",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "output/FactEmployeeMonthly",
									"wildcardFileName": "*.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE northwind.FactEmployeeMonthly;",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FactEmployeeMonthly",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "employeeMonthlyFactSynapse",
								"type": "DatasetReference"
							}
						]
					}
				],
				"folder": {
					"name": "dwhPL"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DimSupplier')]",
				"[concat(variables('factoryId'), '/datasets/suppliersSynapse')]",
				"[concat(variables('factoryId'), '/datasets/DimCategory')]",
				"[concat(variables('factoryId'), '/datasets/categorySynapse')]",
				"[concat(variables('factoryId'), '/datasets/DimEmployee')]",
				"[concat(variables('factoryId'), '/datasets/employeeSynapse')]",
				"[concat(variables('factoryId'), '/datasets/FactProduct')]",
				"[concat(variables('factoryId'), '/datasets/productFactSynapse')]",
				"[concat(variables('factoryId'), '/datasets/FactEmployee')]",
				"[concat(variables('factoryId'), '/datasets/employeeFactSynapse')]",
				"[concat(variables('factoryId'), '/datasets/FactSupervisor')]",
				"[concat(variables('factoryId'), '/datasets/supervisorFactSynapse')]",
				"[concat(variables('factoryId'), '/datasets/FactEmployeeMonthly')]",
				"[concat(variables('factoryId'), '/datasets/employeeMonthlyFactSynapse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimCategory')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalakeLS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ouputNorthwindDS"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "output/DimCategory",
						"fileSystem": "northwind"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalakeLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimEmployee')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalakeLS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ouputNorthwindDS"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "output/DimEmployee",
						"fileSystem": "northwind"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalakeLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimSupplier')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalakeLS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ouputNorthwindDS"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "output/DimSupplier",
						"fileSystem": "northwind"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalakeLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FactEmployee')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalakeLS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ouputNorthwindDS"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "output/FactEmployee",
						"fileSystem": "northwind"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalakeLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FactEmployeeMonthly')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalakeLS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ouputNorthwindDS"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "output/FactEmployeeMonthly",
						"fileSystem": "northwind"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalakeLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FactProduct')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalakeLS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ouputNorthwindDS"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "output/FactProduct",
						"fileSystem": "northwind"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalakeLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FactSupervisor')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalakeLS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ouputNorthwindDS"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "output/FactSupervisor",
						"fileSystem": "northwind"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalakeLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/categoriesParquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalakeLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"year_p": {
						"type": "int",
						"defaultValue": 1996
					},
					"month_p": {
						"type": "int",
						"defaultValue": 7
					},
					"day_p": {
						"type": "int",
						"defaultValue": 16
					}
				},
				"folder": {
					"name": "preparedNorthwindDS"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@concat('prepared/categories/year=', string(dataset().year_p), '/month=', string(dataset().month_p), '/day=', string(dataset().day_p))",
							"type": "Expression"
						},
						"fileSystem": "northwind"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalakeLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/categoriesTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlLS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "inputNorthwindDS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CategoryName",
						"type": "nvarchar"
					},
					{
						"name": "Description",
						"type": "ntext"
					},
					{
						"name": "Picture",
						"type": "image"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Categories"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/categorySynapse')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapseLS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "toSynapseNorthwindDS"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "key",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "category_id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "category_name",
						"type": "nvarchar"
					},
					{
						"name": "created_ts",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "northwind",
					"table": "DimCategory"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/customersParquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalakeLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"year_p": {
						"type": "int",
						"defaultValue": 1996
					},
					"month_p": {
						"type": "int",
						"defaultValue": 7
					},
					"day_p": {
						"type": "int",
						"defaultValue": 16
					}
				},
				"folder": {
					"name": "preparedNorthwindDS"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@concat('prepared/customers/year=', string(dataset().year_p), '/month=', string(dataset().month_p), '/day=', string(dataset().day_p))",
							"type": "Expression"
						},
						"fileSystem": "northwind"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalakeLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/customersTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlLS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "inputNorthwindDS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Customers"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/employeeFactSynapse')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapseLS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "toSynapseNorthwindDS"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "key",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "employee_key",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "employee_id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "total_distinct_territories",
						"type": "int",
						"precision": 10
					},
					{
						"name": "total_distinct_regions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "num_orders_affiliated",
						"type": "int",
						"precision": 10
					},
					{
						"name": "num_products_affiliated",
						"type": "int",
						"precision": 10
					},
					{
						"name": "created_ts",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "northwind",
					"table": "FactEmployee"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/employeeMonthlyFactSynapse')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapseLS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "toSynapseNorthwindDS"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "key",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "employee_key",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "employee_id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "year",
						"type": "int",
						"precision": 10
					},
					{
						"name": "month",
						"type": "int",
						"precision": 10
					},
					{
						"name": "total_products",
						"type": "int",
						"precision": 10
					},
					{
						"name": "total_distinct_products",
						"type": "int",
						"precision": 10
					},
					{
						"name": "total_orders",
						"type": "int",
						"precision": 10
					},
					{
						"name": "created_ts",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "northwind",
					"table": "FactEmployeeMonthly"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/employeeSynapse')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapseLS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "toSynapseNorthwindDS"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "key",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "employee_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "last_name",
						"type": "nvarchar"
					},
					{
						"name": "first_name",
						"type": "nvarchar"
					},
					{
						"name": "birth_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "hire_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "address",
						"type": "nvarchar"
					},
					{
						"name": "city",
						"type": "nvarchar"
					},
					{
						"name": "region",
						"type": "nvarchar"
					},
					{
						"name": "postal_code",
						"type": "nvarchar"
					},
					{
						"name": "country",
						"type": "nvarchar"
					},
					{
						"name": "supervisor_key",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "created_ts",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "northwind",
					"table": "DimEmployee"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/employeeTerretoriesTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlLS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "inputNorthwindDS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EmployeeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TerritoryID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "EmployeeTerritories"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/employeeTerritoriesParquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalakeLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"year_p": {
						"type": "int",
						"defaultValue": 1996
					},
					"month_p": {
						"type": "int",
						"defaultValue": 7
					},
					"day_p": {
						"type": "int",
						"defaultValue": 16
					}
				},
				"folder": {
					"name": "preparedNorthwindDS"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@concat('prepared/employeeTerritories/year=', string(dataset().year_p), '/month=', string(dataset().month_p), '/day=', string(dataset().day_p))",
							"type": "Expression"
						},
						"fileSystem": "northwind"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalakeLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/employeesParquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalakeLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"year_p": {
						"type": "int",
						"defaultValue": 1996
					},
					"month_p": {
						"type": "int",
						"defaultValue": 7
					},
					"day_p": {
						"type": "int",
						"defaultValue": 16
					}
				},
				"folder": {
					"name": "preparedNorthwindDS"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@concat('prepared/employees/year=', string(dataset().year_p), '/month=', string(dataset().month_p), '/day=', string(dataset().day_p))",
							"type": "Expression"
						},
						"fileSystem": "northwind"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalakeLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/employeesTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlLS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "inputNorthwindDS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EmployeeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "TitleOfCourtesy",
						"type": "nvarchar"
					},
					{
						"name": "BirthDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "HireDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Address",
						"type": "nvarchar"
					},
					{
						"name": "City",
						"type": "nvarchar"
					},
					{
						"name": "Region",
						"type": "nvarchar"
					},
					{
						"name": "PostalCode",
						"type": "nvarchar"
					},
					{
						"name": "Country",
						"type": "nvarchar"
					},
					{
						"name": "HomePhone",
						"type": "nvarchar"
					},
					{
						"name": "Extension",
						"type": "nvarchar"
					},
					{
						"name": "Photo",
						"type": "image"
					},
					{
						"name": "Notes",
						"type": "ntext"
					},
					{
						"name": "ReportsTo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PhotoPath",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Employees"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/orderDetailsParquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalakeLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"year_p": {
						"type": "int",
						"defaultValue": 1996
					},
					"month_p": {
						"type": "int",
						"defaultValue": 7
					},
					"day_p": {
						"type": "int",
						"defaultValue": 16
					}
				},
				"folder": {
					"name": "preparedNorthwindDS"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@concat('prepared/orderDetails/year=', string(dataset().year_p), '/month=', string(dataset().month_p), '/day=', string(dataset().day_p))",
							"type": "Expression"
						},
						"fileSystem": "northwind"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalakeLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/orderDetailsTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlLS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "inputNorthwindDS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "OrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UnitPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Quantity",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Discount",
						"type": "real",
						"precision": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Order Details"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/order_detailsTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlLS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "inputNorthwindDS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "OrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UnitPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Quantity",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Discount",
						"type": "real",
						"precision": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Order Details"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ordersParquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalakeLS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "preparedNorthwindDS"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "prepared/orders",
						"fileSystem": "northwind"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalakeLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ordersTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlLS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "inputNorthwindDS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "OrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerID",
						"type": "nchar"
					},
					{
						"name": "EmployeeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RequiredDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ShippedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ShipVia",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Freight",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ShipName",
						"type": "nvarchar"
					},
					{
						"name": "ShipAddress",
						"type": "nvarchar"
					},
					{
						"name": "ShipCity",
						"type": "nvarchar"
					},
					{
						"name": "ShipRegion",
						"type": "nvarchar"
					},
					{
						"name": "ShipPostalCode",
						"type": "nvarchar"
					},
					{
						"name": "ShipCountry",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Orders"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/productFactSynapse')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapseLS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "toSynapseNorthwindDS"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "key",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "product_id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "supplier_key",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "category_key",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "times_ordered",
						"type": "int",
						"precision": 10
					},
					{
						"name": "units_in_stock",
						"type": "int",
						"precision": 10
					},
					{
						"name": "created_ts",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "northwind",
					"table": "FactProduct"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/productsParquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalakeLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"year_p": {
						"type": "int",
						"defaultValue": 1996
					},
					"month_p": {
						"type": "int",
						"defaultValue": 7
					},
					"day_p": {
						"type": "int",
						"defaultValue": 16
					}
				},
				"folder": {
					"name": "preparedNorthwindDS"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@concat('prepared/products/year=', string(dataset().year_p), '/month=', string(dataset().month_p), '/day=', string(dataset().day_p))",
							"type": "Expression"
						},
						"fileSystem": "northwind"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalakeLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/productsTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlLS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "inputNorthwindDS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductName",
						"type": "nvarchar"
					},
					{
						"name": "SupplierID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QuantityPerUnit",
						"type": "nvarchar"
					},
					{
						"name": "UnitPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "UnitsInStock",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "UnitsOnOrder",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "ReorderLevel",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Discontinued",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Products"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/regionParquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalakeLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"year_p": {
						"type": "int",
						"defaultValue": 1996
					},
					"month_p": {
						"type": "int",
						"defaultValue": 7
					},
					"day_p": {
						"type": "int",
						"defaultValue": 16
					}
				},
				"folder": {
					"name": "preparedNorthwindDS"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@concat('prepared/region/year=', string(dataset().year_p), '/month=', string(dataset().month_p), '/day=', string(dataset().day_p))",
							"type": "Expression"
						},
						"fileSystem": "northwind"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalakeLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/regionTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlLS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "inputNorthwindDS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "RegionID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RegionDescription",
						"type": "nchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Region"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/shippersParquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalakeLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"year_p": {
						"type": "int",
						"defaultValue": 1996
					},
					"month_p": {
						"type": "int",
						"defaultValue": 7
					},
					"day_p": {
						"type": "int",
						"defaultValue": 16
					}
				},
				"folder": {
					"name": "preparedNorthwindDS"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@concat('prepared/shippers/year=', string(dataset().year_p), '/month=', string(dataset().month_p), '/day=', string(dataset().day_p))",
							"type": "Expression"
						},
						"fileSystem": "northwind"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalakeLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/shippersTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlLS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "inputNorthwindDS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ShipperID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CompanyName",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Shippers"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/supervisorFactSynapse')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapseLS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "toSynapseNorthwindDS"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "key",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "employee_id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "employee_key",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "num_employees_directly_supervised",
						"type": "int",
						"precision": 10
					},
					{
						"name": "created_ts",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "northwind",
					"table": "FactSupervisor"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/suppliersParquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalakeLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"year_p": {
						"type": "int",
						"defaultValue": 1996
					},
					"month_p": {
						"type": "int",
						"defaultValue": 7
					},
					"day_p": {
						"type": "int",
						"defaultValue": 16
					}
				},
				"folder": {
					"name": "preparedNorthwindDS"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@concat('prepared/suppliers/year=', string(dataset().year_p), '/month=', string(dataset().month_p), '/day=', string(dataset().day_p))",
							"type": "Expression"
						},
						"fileSystem": "northwind"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalakeLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/suppliersSynapse')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapseLS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "toSynapseNorthwindDS"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "key",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "supplier_id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "company_name",
						"type": "nvarchar"
					},
					{
						"name": "created_ts",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "northwind",
					"table": "DimSupplier"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/suppliersTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlLS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "inputNorthwindDS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SupplierID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CompanyName",
						"type": "nvarchar"
					},
					{
						"name": "ContactName",
						"type": "nvarchar"
					},
					{
						"name": "ContactTitle",
						"type": "nvarchar"
					},
					{
						"name": "Address",
						"type": "nvarchar"
					},
					{
						"name": "City",
						"type": "nvarchar"
					},
					{
						"name": "Region",
						"type": "nvarchar"
					},
					{
						"name": "PostalCode",
						"type": "nvarchar"
					},
					{
						"name": "Country",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					},
					{
						"name": "Fax",
						"type": "nvarchar"
					},
					{
						"name": "HomePage",
						"type": "ntext"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Suppliers"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/territoriesParquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalakeLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"year_p": {
						"type": "int",
						"defaultValue": 1996
					},
					"month_p": {
						"type": "int",
						"defaultValue": 7
					},
					"day_p": {
						"type": "int",
						"defaultValue": 16
					}
				},
				"folder": {
					"name": "preparedNorthwindDS"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@concat('prepared/territories/year=', string(dataset().year_p), '/month=', string(dataset().month_p), '/day=', string(dataset().day_p))",
							"type": "Expression"
						},
						"fileSystem": "northwind"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalakeLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/territoriesTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlLS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "inputNorthwindDS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TerritoryID",
						"type": "nvarchar"
					},
					{
						"name": "TerritoryDescription",
						"type": "nchar"
					},
					{
						"name": "RegionID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Territories"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/datalakeLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "https://yevnetdwstoreaccount.dfs.core.windows.net/",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "keyvaultLS",
							"type": "LinkedServiceReference"
						},
						"secretName": "datalakekey1",
						"secretVersion": ""
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/keyvaultLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/keyvaultLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "https://yevnet-KV.vault.azure.net/"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/aggregateData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "northwind"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "categoriesParquet",
								"type": "DatasetReference"
							},
							"name": "categorySource"
						},
						{
							"dataset": {
								"referenceName": "employeesParquet",
								"type": "DatasetReference"
							},
							"name": "employeesSource"
						},
						{
							"dataset": {
								"referenceName": "ordersParquet",
								"type": "DatasetReference"
							},
							"name": "ordersSource"
						},
						{
							"dataset": {
								"referenceName": "orderDetailsParquet",
								"type": "DatasetReference"
							},
							"name": "orderDetailsSource"
						},
						{
							"dataset": {
								"referenceName": "territoriesParquet",
								"type": "DatasetReference"
							},
							"name": "terretoriesSource"
						},
						{
							"dataset": {
								"referenceName": "employeeTerritoriesParquet",
								"type": "DatasetReference"
							},
							"name": "employeeTerretoriesSource"
						},
						{
							"dataset": {
								"referenceName": "suppliersParquet",
								"type": "DatasetReference"
							},
							"name": "supplierSource"
						},
						{
							"dataset": {
								"referenceName": "productsParquet",
								"type": "DatasetReference"
							},
							"name": "productsSource"
						},
						{
							"dataset": {
								"referenceName": "ordersParquet",
								"type": "DatasetReference"
							},
							"name": "orderMonthlySource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DimCategory",
								"type": "DatasetReference"
							},
							"name": "sinkCategory"
						},
						{
							"dataset": {
								"referenceName": "FactSupervisor",
								"type": "DatasetReference"
							},
							"name": "sinkSupervisor"
						},
						{
							"dataset": {
								"referenceName": "DimEmployee",
								"type": "DatasetReference"
							},
							"name": "sinkEmployeeDim"
						},
						{
							"dataset": {
								"referenceName": "FactEmployee",
								"type": "DatasetReference"
							},
							"name": "sinkFactEmployee"
						},
						{
							"dataset": {
								"referenceName": "DimSupplier",
								"type": "DatasetReference"
							},
							"name": "sinkSupplier"
						},
						{
							"dataset": {
								"referenceName": "FactProduct",
								"type": "DatasetReference"
							},
							"name": "sinkProduct"
						},
						{
							"dataset": {
								"referenceName": "FactEmployeeMonthly",
								"type": "DatasetReference"
							},
							"name": "sinkFactEmployeeMonthly"
						}
					],
					"transformations": [
						{
							"name": "AddKeyCategory"
						},
						{
							"name": "SelectCategory"
						},
						{
							"name": "SelectEmployee"
						},
						{
							"name": "SelectOrders"
						},
						{
							"name": "SelectOrderDetails"
						},
						{
							"name": "AggregateDistinctReportTo"
						},
						{
							"name": "FilterReportToNotNull"
						},
						{
							"name": "AddKeySupervisor"
						},
						{
							"name": "AddKeyEmployee"
						},
						{
							"name": "JoinEmpOrders"
						},
						{
							"name": "JoinTotalProducts"
						},
						{
							"name": "SelectJoinOrders"
						},
						{
							"name": "SelectTerretories"
						},
						{
							"name": "SelectEmpTerretories"
						},
						{
							"name": "JoinTerretories"
						},
						{
							"name": "SelectJoinTerretories"
						},
						{
							"name": "JoinEmpTerrReg"
						},
						{
							"name": "SelectJoinedOrders"
						},
						{
							"name": "AggregateEmployee"
						},
						{
							"name": "AddKeyAggEmployee"
						},
						{
							"name": "SelectSupplier"
						},
						{
							"name": "AddKeySupplier"
						},
						{
							"name": "SelectProducts"
						},
						{
							"name": "AggregateTimesOrdered"
						},
						{
							"name": "JoinProducts"
						},
						{
							"name": "AddKeyProducts"
						},
						{
							"name": "SelectEmployeeID"
						},
						{
							"name": "SelectEmployeeJoin"
						},
						{
							"name": "SelectProductsJoin"
						},
						{
							"name": "MapOrdersMonthly",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "MapOrders",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "SelectOrdersMonthly"
						},
						{
							"name": "JoinOrderDetails"
						},
						{
							"name": "AggregateTotalProducts"
						},
						{
							"name": "SelectJoinOrdersMonthly"
						},
						{
							"name": "JoinEmpOrdersMonthly"
						},
						{
							"name": "SelectEmployeeJoinMonthly"
						},
						{
							"name": "AggregateEmployeeMonthly"
						},
						{
							"name": "AddKeyAggEmpMonthly"
						},
						{
							"name": "AddMonthYear"
						},
						{
							"name": "SelectSupervisor"
						},
						{
							"name": "SelectEmployeeKey"
						},
						{
							"name": "JoinEmployeeKeyDimSup"
						},
						{
							"name": "JoinEmployeeKeyFactEmpMonth"
						},
						{
							"name": "JoinEmployeeKeyFactEmp"
						},
						{
							"name": "finSelectFactEmployee"
						},
						{
							"name": "finSelectFactEmpMonthly"
						},
						{
							"name": "finSelectDimSupervisor"
						},
						{
							"name": "SelectSupplierKey"
						},
						{
							"name": "SelectCategoryKey"
						},
						{
							"name": "JoinCategoryKey"
						},
						{
							"name": "JoinSupplierKey"
						},
						{
							"name": "finSelectDimEmployee"
						},
						{
							"name": "MapCategory",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "MapEmployees",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "MapOrderDetails",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "MapTerretories",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "MapTerritoriesEmployee",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "MapSuppliers",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "MapProducts",
							"description": "Creates an explicit mapping for each drifted column"
						}
					],
					"script": "parameters{\n\tmonth_p as integer (7),\n\tyear_p as integer (1996)\n}\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:[('prepared/products/year=' + toString($year_p) + '/month=' + toString($month_p) + '/**/*parquet')]) ~> categorySource\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:[('prepared/categories/year=' + toString($year_p) + '/month=' + toString($month_p) + '/**/*parquet')]) ~> employeesSource\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionRootPath: 'prepared/orders',\n\tformat: 'parquet',\n\twildcardPaths:[('prepared/orders/**/**/**/*parquet')]) ~> ordersSource\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:[('prepared/orderDetails/year=' + toString($year_p) + '/month=' + toString($month_p) + '/**/*parquet')]) ~> orderDetailsSource\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:[('prepared/territories/year=' + toString($year_p) + '/month=' + toString($month_p) + '/**/*parquet')]) ~> terretoriesSource\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:[('prepared/employeeTerritories/year=' + toString($year_p) + '/month=' + toString($month_p) + '/**/*parquet')]) ~> employeeTerretoriesSource\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:[('prepared/suppliers/year=' + toString($year_p) + '/month=' + toString($month_p) + '/**/*parquet')]) ~> supplierSource\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:[('prepared/employees/year=' + toString($year_p) + '/month=' + toString($month_p) + '/**/*parquet')]) ~> productsSource\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionRootPath: 'prepared/orders',\n\tformat: 'parquet',\n\twildcardPaths:[('prepared/orders/year=' + toString($year_p) + '/month=' + toString($month_p) + '/**/*parquet')]) ~> orderMonthlySource\nSelectCategory derive(key = crc32(512,category_id,category_name),\n\t\tcreated_ts = currentTimestamp()) ~> AddKeyCategory\nMapCategory select(mapColumn(\n\t\tcategory_id = CategoryID,\n\t\tcategory_name = CategoryName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCategory\nMapEmployees select(mapColumn(\n\t\tEmployeeID,\n\t\tLastName,\n\t\tFirstName,\n\t\tBirthDate,\n\t\tHireDate,\n\t\tAddress,\n\t\tCity,\n\t\tRegion,\n\t\tPostalCode,\n\t\tCountry,\n\t\tReportsTo\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectEmployee\nMapOrders select(mapColumn(\n\t\tOrderID,\n\t\tCustomerID,\n\t\tEmployeeID,\n\t\tOrderDate,\n\t\tRequiredDate,\n\t\tShippedDate,\n\t\tShipVia,\n\t\tyear,\n\t\tmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectOrders\nMapOrderDetails select(mapColumn(\n\t\tOrderID,\n\t\tProductID,\n\t\tQuantity\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectOrderDetails\nSelectEmployee aggregate(groupBy(ReportsTo),\n\tworkerCounts = countDistinct(EmployeeID)) ~> AggregateDistinctReportTo\nAggregateDistinctReportTo filter(!isNull(ReportsTo)) ~> FilterReportToNotNull\nfinSelectDimSupervisor derive(key = crc32(512,employee_key),\n\t\tcreated_ts = currentTimestamp()) ~> AddKeySupervisor\nfinSelectDimEmployee derive(key = crc32(512,last_name,first_name,birth_date,hire_date,address,city,region,postal_code,country),\n\t\tcreated_ts = currentTimestamp()) ~> AddKeyEmployee\nSelectEmployeeID, SelectJoinOrders join(SelectEmployeeID@EmployeeID == SelectJoinOrders@EmployeeID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinEmpOrders\nSelectOrders, AggregateTotalProducts join(SelectOrders@OrderID == AggregateTotalProducts@OrderID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinTotalProducts\nJoinTotalProducts select(mapColumn(\n\t\tOrderID = SelectOrders@OrderID,\n\t\tCustomerID,\n\t\tEmployeeID,\n\t\tOrderDate,\n\t\tRequiredDate,\n\t\tShippedDate,\n\t\tShipVia,\n\t\tyear,\n\t\tmonth,\n\t\tOrderID = AggregateTotalProducts@OrderID,\n\t\ttotal_products\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectJoinOrders\nMapTerretories select(mapColumn(\n\t\tTerritoryID,\n\t\tRegionID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectTerretories\nMapTerritoriesEmployee select(mapColumn(\n\t\tEmployeeID,\n\t\tTerritoryID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectEmpTerretories\nSelectEmpTerretories, SelectTerretories join(SelectEmpTerretories@TerritoryID == SelectTerretories@TerritoryID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinTerretories\nJoinTerretories select(mapColumn(\n\t\tEmployeeID,\n\t\tTerritoryID = SelectEmpTerretories@TerritoryID,\n\t\tRegionID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectJoinTerretories\nSelectEmployeeJoin, SelectJoinTerretories join(SelectEmployeeJoin@EmployeeID == SelectJoinTerretories@EmployeeID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinEmpTerrReg\nJoinEmpTerrReg select(mapColumn(\n\t\tEmployeeID = SelectEmployeeJoin@EmployeeID,\n\t\tOrderID,\n\t\ttotal_products,\n\t\tTerritoryID,\n\t\tRegionID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectJoinedOrders\nSelectJoinedOrders aggregate(groupBy(EmployeeID),\n\ttotal_orders = count(OrderID),\n\t\ttotal_products = sum(total_products),\n\t\ttotal_distinct_territories = countDistinct(TerritoryID),\n\t\ttotal_distinct_regions = countDistinct(RegionID)) ~> AggregateEmployee\nfinSelectFactEmployee derive(key = crc32(512, employee_key),\n\t\tcreated_ts = currentTimestamp()) ~> AddKeyAggEmployee\nMapSuppliers select(mapColumn(\n\t\tsupplier_id = SupplierID,\n\t\tcompany_name = CompanyName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectSupplier\nSelectSupplier derive(key = crc32(512,supplier_id,company_name),\n\t\tcreated_ts = currentTimestamp()) ~> AddKeySupplier\nMapProducts select(mapColumn(\n\t\tProductID,\n\t\tSupplierID,\n\t\tCategoryID,\n\t\tUnitsInStock\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectProducts\nSelectOrderDetails aggregate(groupBy(ProductID),\n\ttimes_ordered = sum(Quantity)) ~> AggregateTimesOrdered\nSelectProducts, AggregateTimesOrdered join(SelectProducts@ProductID == AggregateTimesOrdered@ProductID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinProducts\nSelectProductsJoin derive(key = crc32(512,product_id),\n\t\tcreated_ts = currentTimestamp()) ~> AddKeyProducts\nSelectEmployee select(mapColumn(\n\t\tEmployeeID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectEmployeeID\nJoinEmpOrders select(mapColumn(\n\t\tEmployeeID = SelectEmployeeID@EmployeeID,\n\t\tOrderID,\n\t\tCustomerID,\n\t\tOrderDate,\n\t\tRequiredDate,\n\t\tShippedDate,\n\t\tShipVia,\n\t\tyear,\n\t\tmonth,\n\t\ttotal_products\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectEmployeeJoin\nJoinSupplierKey select(mapColumn(\n\t\tproduct_id = SelectProducts@ProductID,\n\t\tunits_in_stock = UnitsInStock,\n\t\ttimes_ordered,\n\t\tcategory_key,\n\t\tsupplier_key\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectProductsJoin\norderMonthlySource derive(OrderID = toInteger(byName('OrderID')),\n\t\tCustomerID = toString(byName('CustomerID')),\n\t\tEmployeeID = toInteger(byName('EmployeeID')),\n\t\tOrderDate = toTimestamp(byName('OrderDate')),\n\t\tRequiredDate = toTimestamp(byName('RequiredDate')),\n\t\tShippedDate = toTimestamp(byName('ShippedDate')),\n\t\tShipVia = toInteger(byName('ShipVia')),\n\t\tFreight = toDecimal(byName('Freight')),\n\t\tShipName = toString(byName('ShipName')),\n\t\tShipAddress = toString(byName('ShipAddress')),\n\t\tShipCity = toString(byName('ShipCity')),\n\t\tShipRegion = toString(byName('ShipRegion')),\n\t\tShipPostalCode = toString(byName('ShipPostalCode')),\n\t\tShipCountry = toString(byName('ShipCountry')),\n\t\tyear = toInteger(byName('year')),\n\t\tmonth = toInteger(byName('month'))) ~> MapOrdersMonthly\nordersSource derive(OrderID = toInteger(byName('OrderID')),\n\t\tCustomerID = toString(byName('CustomerID')),\n\t\tEmployeeID = toInteger(byName('EmployeeID')),\n\t\tOrderDate = toTimestamp(byName('OrderDate')),\n\t\tRequiredDate = toTimestamp(byName('RequiredDate')),\n\t\tShippedDate = toTimestamp(byName('ShippedDate')),\n\t\tShipVia = toInteger(byName('ShipVia')),\n\t\tFreight = toDecimal(byName('Freight')),\n\t\tShipName = toString(byName('ShipName')),\n\t\tShipAddress = toString(byName('ShipAddress')),\n\t\tShipCity = toString(byName('ShipCity')),\n\t\tShipRegion = toString(byName('ShipRegion')),\n\t\tShipPostalCode = toString(byName('ShipPostalCode')),\n\t\tShipCountry = toString(byName('ShipCountry')),\n\t\tyear = toInteger(byName('year')),\n\t\tmonth = toInteger(byName('month'))) ~> MapOrders\nMapOrdersMonthly select(mapColumn(\n\t\tOrderID,\n\t\tCustomerID,\n\t\tEmployeeID,\n\t\tOrderDate,\n\t\tRequiredDate,\n\t\tShippedDate,\n\t\tShipVia,\n\t\tyear,\n\t\tmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectOrdersMonthly\nSelectOrdersMonthly, SelectOrderDetails join(SelectOrdersMonthly@OrderID == SelectOrderDetails@OrderID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinOrderDetails\nSelectOrderDetails aggregate(groupBy(OrderID),\n\ttotal_products = sum(Quantity)) ~> AggregateTotalProducts\nJoinOrderDetails select(mapColumn(\n\t\tOrderID = SelectOrdersMonthly@OrderID,\n\t\tCustomerID,\n\t\tEmployeeID,\n\t\tOrderDate,\n\t\tRequiredDate,\n\t\tShippedDate,\n\t\tShipVia,\n\t\tyear,\n\t\tmonth,\n\t\tOrderID = SelectOrderDetails@OrderID,\n\t\tProductID,\n\t\tQuantity\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectJoinOrdersMonthly\nSelectEmployeeID, SelectJoinOrdersMonthly join(SelectEmployeeID@EmployeeID == SelectJoinOrdersMonthly@EmployeeID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinEmpOrdersMonthly\nJoinEmpOrdersMonthly select(mapColumn(\n\t\tEmployeeID = SelectEmployeeID@EmployeeID,\n\t\tOrderID,\n\t\tCustomerID,\n\t\tOrderDate,\n\t\tRequiredDate,\n\t\tShippedDate,\n\t\tShipVia,\n\t\tyear,\n\t\tmonth,\n\t\tProductID,\n\t\tQuantity\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectEmployeeJoinMonthly\nSelectEmployeeJoinMonthly aggregate(groupBy(EmployeeID),\n\ttotal_products = sum(Quantity),\n\t\ttotal_distinct_products = countDistinct(ProductID),\n\t\ttotal_orders = count(OrderID)) ~> AggregateEmployeeMonthly\nfinSelectFactEmpMonthly derive(key = crc32(512,employee_key,year,month),\n\t\tcreated_ts = currentTimestamp()) ~> AddKeyAggEmpMonthly\nJoinEmployeeKeyFactEmpMonth derive(year = $year_p,\n\t\tmonth = $month_p) ~> AddMonthYear\nFilterReportToNotNull select(mapColumn(\n\t\temployee_id = ReportsTo,\n\t\tnum_employees_directly_supervised = workerCounts\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectSupervisor\nAddKeyEmployee select(mapColumn(\n\t\tEmployeeID = employee_id,\n\t\tkey\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectEmployeeKey\nSelectSupervisor, SelectEmployeeKey join(employee_id == EmployeeID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinEmployeeKeyDimSup\nAggregateEmployeeMonthly, SelectEmployeeKey join(AggregateEmployeeMonthly@EmployeeID == SelectEmployeeKey@EmployeeID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinEmployeeKeyFactEmpMonth\nAggregateEmployee, SelectEmployeeKey join(AggregateEmployee@EmployeeID == SelectEmployeeKey@EmployeeID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinEmployeeKeyFactEmp\nJoinEmployeeKeyFactEmp select(mapColumn(\n\t\tnum_orders_affiliated = total_orders,\n\t\tnum_products_affiliated = total_products,\n\t\ttotal_distinct_territories,\n\t\ttotal_distinct_regions,\n\t\temployee_key = key\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> finSelectFactEmployee\nAddMonthYear select(mapColumn(\n\t\ttotal_products,\n\t\ttotal_distinct_products,\n\t\ttotal_orders,\n\t\temployee_key = key,\n\t\tyear,\n\t\tmonth\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> finSelectFactEmpMonthly\nJoinEmployeeKeyDimSup select(mapColumn(\n\t\tnum_employees_directly_supervised,\n\t\temployee_key = key\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> finSelectDimSupervisor\nAddKeySupplier select(mapColumn(\n\t\tsupplier_id,\n\t\tsupplier_key = key\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectSupplierKey\nAddKeyCategory select(mapColumn(\n\t\tcategory_id,\n\t\tcategory_key = key\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCategoryKey\nJoinProducts, SelectCategoryKey join(CategoryID == category_id,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinCategoryKey\nJoinCategoryKey, SelectSupplierKey join(SupplierID == supplier_id,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinSupplierKey\nSelectEmployee select(mapColumn(\n\t\temployee_id = EmployeeID,\n\t\tlast_name = LastName,\n\t\tfirst_name = FirstName,\n\t\tbirth_date = BirthDate,\n\t\thire_date = HireDate,\n\t\taddress = Address,\n\t\tcity = City,\n\t\tregion = Region,\n\t\tpostal_code = PostalCode,\n\t\tcountry = Country\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> finSelectDimEmployee\ncategorySource derive(CategoryID = toInteger(byName('CategoryID')),\n\t\tCategoryName = toString(byName('CategoryName')),\n\t\tDescription = toString(byName('Description')),\n\t\tPicture = toBinary(byName('Picture'))) ~> MapCategory\nemployeesSource derive(EmployeeID = toInteger(byName('EmployeeID')),\n\t\tLastName = toString(byName('LastName')),\n\t\tFirstName = toString(byName('FirstName')),\n\t\tTitle = toString(byName('Title')),\n\t\tTitleOfCourtesy = toString(byName('TitleOfCourtesy')),\n\t\tBirthDate = toTimestamp(byName('BirthDate')),\n\t\tHireDate = toTimestamp(byName('HireDate')),\n\t\tAddress = toString(byName('Address')),\n\t\tCity = toString(byName('City')),\n\t\tRegion = toString(byName('Region')),\n\t\tPostalCode = toString(byName('PostalCode')),\n\t\tCountry = toString(byName('Country')),\n\t\tHomePhone = toString(byName('HomePhone')),\n\t\tExtension = toString(byName('Extension')),\n\t\tPhoto = toBinary(byName('Photo')),\n\t\tNotes = toString(byName('Notes')),\n\t\tReportsTo = toInteger(byName('ReportsTo')),\n\t\tPhotoPath = toString(byName('PhotoPath'))) ~> MapEmployees\norderDetailsSource derive(OrderID = toInteger(byName('OrderID')),\n\t\tProductID = toInteger(byName('ProductID')),\n\t\tUnitPrice = toDecimal(byName('UnitPrice')),\n\t\tQuantity = toInteger(byName('Quantity')),\n\t\tDiscount = toFloat(byName('Discount'))) ~> MapOrderDetails\nterretoriesSource derive(TerritoryID = toString(byName('TerritoryID')),\n\t\tTerritoryDescription = toString(byName('TerritoryDescription')),\n\t\tRegionID = toInteger(byName('RegionID'))) ~> MapTerretories\nemployeeTerretoriesSource derive(EmployeeID = toInteger(byName('EmployeeID')),\n\t\tTerritoryID = toString(byName('TerritoryID'))) ~> MapTerritoriesEmployee\nsupplierSource derive(SupplierID = toInteger(byName('SupplierID')),\n\t\tCompanyName = toString(byName('CompanyName')),\n\t\tContactName = toString(byName('ContactName')),\n\t\tContactTitle = toString(byName('ContactTitle')),\n\t\tAddress = toString(byName('Address')),\n\t\tCity = toString(byName('City')),\n\t\tRegion = toString(byName('Region')),\n\t\tPostalCode = toString(byName('PostalCode')),\n\t\tCountry = toString(byName('Country')),\n\t\tPhone = toString(byName('Phone')),\n\t\tFax = toString(byName('Fax')),\n\t\tHomePage = toString(byName('HomePage'))) ~> MapSuppliers\nproductsSource derive(ProductID = toInteger(byName('ProductID')),\n\t\tProductName = toString(byName('ProductName')),\n\t\tSupplierID = toInteger(byName('SupplierID')),\n\t\tCategoryID = toInteger(byName('CategoryID')),\n\t\tQuantityPerUnit = toString(byName('QuantityPerUnit')),\n\t\tUnitPrice = toDecimal(byName('UnitPrice')),\n\t\tUnitsInStock = toInteger(byName('UnitsInStock')),\n\t\tUnitsOnOrder = toInteger(byName('UnitsOnOrder')),\n\t\tReorderLevel = toInteger(byName('ReorderLevel')),\n\t\tDiscontinued = toBoolean(byName('Discontinued'))) ~> MapProducts\nAddKeyCategory sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinkCategory\nAddKeySupervisor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinkSupervisor\nAddKeyEmployee sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinkEmployeeDim\nAddKeyAggEmployee sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinkFactEmployee\nAddKeySupplier sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinkSupplier\nAddKeyProducts sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinkProduct\nAddKeyAggEmpMonthly sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinkFactEmployeeMonthly"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/categoriesParquet')]",
				"[concat(variables('factoryId'), '/datasets/employeesParquet')]",
				"[concat(variables('factoryId'), '/datasets/ordersParquet')]",
				"[concat(variables('factoryId'), '/datasets/orderDetailsParquet')]",
				"[concat(variables('factoryId'), '/datasets/territoriesParquet')]",
				"[concat(variables('factoryId'), '/datasets/employeeTerritoriesParquet')]",
				"[concat(variables('factoryId'), '/datasets/suppliersParquet')]",
				"[concat(variables('factoryId'), '/datasets/productsParquet')]",
				"[concat(variables('factoryId'), '/datasets/DimCategory')]",
				"[concat(variables('factoryId'), '/datasets/FactSupervisor')]",
				"[concat(variables('factoryId'), '/datasets/DimEmployee')]",
				"[concat(variables('factoryId'), '/datasets/FactEmployee')]",
				"[concat(variables('factoryId'), '/datasets/DimSupplier')]",
				"[concat(variables('factoryId'), '/datasets/FactProduct')]",
				"[concat(variables('factoryId'), '/datasets/FactEmployeeMonthly')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/prepareOrders')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "northwind"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ordersTable",
								"type": "DatasetReference"
							},
							"name": "OrdersTable"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ordersParquet",
								"type": "DatasetReference"
							},
							"name": "OrdersParquet"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumnYearMonthDay"
						},
						{
							"name": "FilterRows"
						}
					],
					"script": "parameters{\n\tyear_p as integer (1996),\n\tmonth_p as integer (7),\n\tday_p as integer (15)\n}\nsource(output(\n\t\tOrderID as integer,\n\t\tCustomerID as string,\n\t\tEmployeeID as integer,\n\t\tOrderDate as timestamp,\n\t\tRequiredDate as timestamp,\n\t\tShippedDate as timestamp,\n\t\tShipVia as integer,\n\t\tFreight as decimal(19,4),\n\t\tShipName as string,\n\t\tShipAddress as string,\n\t\tShipCity as string,\n\t\tShipRegion as string,\n\t\tShipPostalCode as string,\n\t\tShipCountry as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> OrdersTable\nFilterRows derive(year = year(OrderDate),\n\t\tmonth = month(OrderDate),\n\t\tday = dayOfMonth(OrderDate),\n\tpartitionBy('key',\n\t\t0,\n\t\tyear,\n\t\tmonth,\n\t\tday\n\t)) ~> DerivedColumnYearMonthDay\nOrdersTable filter(coalesce(ShippedDate, OrderDate)==toTimestamp(toString($month_p) + '/' + toString($day_p) + '/' + toString($year_p), 'MM/dd/yyyy')) ~> FilterRows\nDerivedColumnYearMonthDay sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> OrdersParquet"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ordersTable')]",
				"[concat(variables('factoryId'), '/datasets/ordersParquet')]"
			]
		}
	]
}